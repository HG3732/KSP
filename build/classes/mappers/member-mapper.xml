<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">
<resultMap type="MemberDto" id="MemberDto">
	<id column="MEMBER_ID" property="mem_id"/>
	<result column="MEMBER_ADMIN" property="mem_admin"/>
	<result column="MEMBER_NAME" property="mem_name"/>
	<result column="MEMBER_PWD" property="mem_pwd"/>
	<result column="MEMBER_EMAIL" property="mem_email"/>
	<result column="MEMBER_ADDRESS" property="mem_address"/>
	<result column="MEMBER_FAIL_COUNT" property="memFailCnt"/>
</resultMap>
	<!-- 로그인 실패 시 비밀번호 초기화 횟수 증가 -->
	<update id="failCntUpdate" parameterType="map">
			UPDATE MEMBER SET MEMBER_FAIL_COUNT =  MEMBER_FAIL_COUNT + 1
				WHERE MEMBER_ID = #{mem_id}
		<selectKey resultType="int" keyProperty="memFailCnt" order="AFTER">
			SELECT MEMBER_FAIL_COUNT FROM MEMBER WHERE MEMBER_ID = #{mem_id}
		</selectKey> 
	</update>
	
	<!-- 로그인 성공 시 초기화 -->
	<update id="resetFailCnt" parameterType="string">
		UPDATE MEMBER SET MEMBER_FAIL_COUNT = 0 
			WHERE MEMBER_ID = #{mem_id}
	</update>
	
	<select id="selectTotalCount2" parameterType="map" resultType="int">
		SELECT COUNT(*) FROM MEMBER
		<if test='keyword != null and keyword !=""'>
			<bind name="keyword3" value="'%' + keyword + '%'"/>
			<choose>
			 	<when test="category.equals('MEMBER_NAME')">
			 		WHERE MEMBER_NAME LIKE #{keyword3}
			 	</when>
			 	<when test="category.equals('MEMBER_ID')">
			 		WHERE MEMBER_ID LIKE #{keyword3}
			 	</when>
			 	<when test="category.equals('MEMBER_PWD')">
			 		WHERE MEMBER_PWD LIKE #{keyword3}
			 	</when>
			 	<when test="category.equals('MEMBER_EMAIL')">
			 		WHERE MEMBER_EMAIL LIKE #{keyword3}
			 	</when>
			 	<when test="category.equals('MEMBER_ADDRESS')">
			 		WHERE MEMBER_ADDRESS LIKE #{keyword3}
			 	</when>
			 	<when test="category.equals('MEMBER_ADMIN')">
			 		WHERE MEMBER_ADMIN LIKE #{keyword3}
			 	</when>
			 </choose>
		</if>
	</select>
	
	<select id="selectMemberSearch2" parameterType="map" resultMap="MemberDto">
		
		SELECT * FROM MEMBER
		<!-- SELECT m2.* 
			FROM (SELECT m1.*, ROWNUM rn
			 FROM (SELECT MEMBER_ID, MEMBER_ADMIN, MEMBER_NAME, MEMBER_PWD, MEMBER_EMAIL, MEMBER_ADDRESS, MEMBER_FAIL_COUNT
			 FROM MEMBER -->
			 <if test="keyword != null and keyword !='' ">
			 	<bind name="keyword3" value="'%' + keyword + '%'" />
				 <choose>
				 	<when test="category.equals('MEMBER_NAME')">
				 		WHERE MEMBER_NAME LIKE #{keyword3}
				 	</when>
				 	<when test="category.equals('MEMBER_ID')">
				 		WHERE MEMBER_ID LIKE #{keyword3}
				 	</when>
				 	<when test="category.equals('MEMBER_PWD')">
				 		WHERE MEMBER_PWD LIKE #{keyword3}
				 	</when>
				 	<when test="category.equals('MEMBER_EMAIL')">
				 		WHERE MEMBER_EMAIL LIKE #{keyword3}
				 	</when>
				 	<when test="category.equals('MEMBER_ADDRESS')">
				 		WHERE MEMBER_ADDRESS LIKE #{keyword3}
				 	</when>
				 	<when test="category.equals('MEMBER_ADMIN')">
				 		WHERE MEMBER_ADMIN LIKE #{keyword3}
				 	</when>
				 </choose>
			 </if>
			 <if test="sort != null and sort !=''">
			 	<choose>
			 		<when test="sort.equals('MEMBER_NAME')">
			 			ORDER BY MEMBER_NAME
			 		</when>
			 		<when test="sort.equals('MEMBER_ID')">
			 			ORDER BY MEMBER_ID
			 		</when>
			 		<when test="sort.equals('MEMBER_PWD')">
			 			ORDER BY MEMBER_PWD
			 		</when>
			 		<when test="sort.equals('MEMBER_EMAIL')">
			 			ORDER BY MEMBER_EMAIL
			 		</when>
			 		<when test="sort.equals('MEMBER_ADDRESS')">
			 			ORDER BY MEMBER_ADDRESS
			 		</when>
			 		<when test="sort.equals('MEMBER_ADMIN')">
			 			ORDER BY MEMBER_ADMIN
			 		</when>
			 	</choose>
			 	<choose>
					<when test="val != null and val.equals('DESC')">
						DESC
					</when>
					<when test="val != null and val.equals('ASC')">
						ASC
					</when>
				 </choose>
			 </if>
	</select>
</mapper>
